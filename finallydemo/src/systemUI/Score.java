/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package systemUI;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;

import util.DBcls;
import util.Mypanel;
import User.Login;

/**
 *
 * @author Administrator
 */
public class Score extends Mypanel implements Runnable {

	public static String tname;
	Object[][] tab;
	Connection con;
	PreparedStatement ps;
	Statement st;
	ResultSet rs;
	int[] id;

	/**
	 * Creates new form Score
	 */
	public Score() {
		initComponents();
		if(Login.type.equals("student"))
		settable(TheMainUI.SID);
		if (Login.type.equals("teacher")) {
			tname=Login.name;
			setitems();
			new Thread(this).start();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jComboBox1 = new javax.swing.JComboBox();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTable2 = new javax.swing.JTable();
		jTextField1 = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();

		jLabel1.setFont(new java.awt.Font("幼圆", 0, 48)); // NOI18N
		jLabel1.setText("成绩管理");

		jComboBox1.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jComboBox1ItemStateChanged(evt);
			}
		});

		jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

		jTable2.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Name", "Realname", "Score" }) {
			boolean[] canEdit = new boolean[] { false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane2.setViewportView(jTable2);

		jTextField1.setEditable(false);

		jLabel2.setText("In put scores");

		jButton1.setText("Done");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("Refresh");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(238, 238, 238).addComponent(jLabel1))
						.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jComboBox1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
				.addContainerGap())
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(jButton2).addComponent(jScrollPane2,
										javax.swing.GroupLayout.PREFERRED_SIZE, 307,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
						.addComponent(jLabel2).addGap(51, 51, 51)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 151,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton1))
						.addGap(56, 56, 56)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addGap(17, 17, 17)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton2))
						.addGap(18, 18, 18)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 431,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 47, Short.MAX_VALUE))
				.addGroup(layout.createSequentialGroup().addGap(139, 139, 139)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel2))
						.addGap(36, 36, 36).addComponent(jButton1).addGap(79, 381, Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:
            setitems();
		settable();
	}// GEN-LAST:event_jButton2ActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		String sql[] = { "update stu_course set score=? where ID=?" };
		try {
			ps = con.prepareStatement(sql[0]);
			ps.setInt(1, new Integer(jTextField1.getText()));
			ps.setInt(2, id[jTable2.getSelectedRow()]);
			System.out.println(ps);
			int rst = ps.executeUpdate();
			if (rst > 0) {
				JOptionPane.showMessageDialog(this, "Succeeded");
			} else
				;
			settable();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}// GEN-LAST:event_jButton1ActionPerformed

	private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBox1ItemStateChanged
		// TODO add your handling code here:
		if (jComboBox1.isEnabled())
			settable();
	}// GEN-LAST:event_jComboBox1ItemStateChange
	int numc = 0, cid[];

	void setitems() {
		tname = Login.name;

		String sql[] = { "select count(CID) from course where tname=?", "select CID,cname from course where tname=?" };
		try {
			con = DBcls.getcon();
			ps = con.prepareStatement(sql[0]);
			ps.setString(1, tname);
			System.out.println(ps);
			rs = ps.executeQuery();
			if (rs.next())
				numc = rs.getInt(1);

                        if(numc>0){
			ps = con.prepareStatement(sql[1]);
			ps.setString(1, tname);
			System.out.println(ps);
			rs = ps.executeQuery();
			cid = new int[numc];
			int i = 0;

			jComboBox1.setEnabled(false);
			while (rs.next()) {
				cid[i] = rs.getInt(1);
				jComboBox1.addItem(new String(rs.getString(1) + " " + rs.getString(2)));
				i++;
			}
			jComboBox1.setEnabled(true);
			settable();
                        }
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	void settable() {
		String sql[] = { "select count(ID) from stu_course natural join studetail s where CID=?",
				"select * from stu_course natural join studetail s where CID=?" };
		try {
			ps = con.prepareStatement(sql[0]);
			ps.setInt(1, cid[jComboBox1.getSelectedIndex()]);
			rs = ps.executeQuery();
			int row = 0;
			if (rs.next())
				row = rs.getInt(1);
			ps = con.prepareStatement(sql[1]);
			ps.setInt(1, cid[jComboBox1.getSelectedIndex()]);
			System.out.println(ps);
			rs = ps.executeQuery();
			id = new int[row];
			tab = new Object[row][3];
			int i = 0;
			while (rs.next()) {
				id[i] = rs.getInt(2);
				tab[i][0] = rs.getString(5);
				tab[i][1] = rs.getString(6);
				tab[i][2] = rs.getString(4);
				i++;
			}
			jTable2.setModel(
					new javax.swing.table.DefaultTableModel(tab, new String[] { "Name", "Realname", "Score" }) {
						boolean[] canEdit = new boolean[] { false, false, false };

						public boolean isCellEditable(int rowIndex, int columnIndex) {
							return canEdit[columnIndex];
						}
					});
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	void settable(int ID) {
		String sql[] = { "select count(ID) from stu_course natural join studetail s where SID=?",
		"select * from stu_course natural join studetail s where SID=?" };
		try {
			con=DBcls.getcon();
			ps = con.prepareStatement(sql[0]);
			ps.setInt(1, ID);
			rs = ps.executeQuery();
			int row = 0;
			if (rs.next())
				row = rs.getInt(1);
			ps = con.prepareStatement(sql[1]);
			ps.setInt(1, ID);
			System.out.println(ps);
			rs = ps.executeQuery();
			id = new int[row];
			tab = new Object[row][3];
			int i = 0;
			while (rs.next()) {
				id[i] = rs.getInt(2);
				tab[i][0] = rs.getString(5);
				tab[i][1] = rs.getString(6);
				tab[i][2] = rs.getString(4);
				i++;
			}
			jTable2.setModel(
					new javax.swing.table.DefaultTableModel(tab, new String[] { "Name", "Realname", "Score" }) {
						boolean[] canEdit = new boolean[] { false, false, false };

						public boolean isCellEditable(int rowIndex, int columnIndex) {
							return canEdit[columnIndex];
						}
					});
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JComboBox jComboBox1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTable jTable2;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration//GEN-END:variables

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while (true) {
			try {
				Thread.currentThread().sleep(100);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			if (jTable2.getSelectedRow() > -1) {
				jButton1.setEnabled(true);
//				if (tab[jTable2.getSelectedRow()][2] != null)
//					jTextField1.setText(tab[jTable2.getSelectedRow()][2].toString());
				jTextField1.setEditable(true);
			} else {
				jButton1.setEnabled(false);
				jTextField1.setText(null);
				jTextField1.setEditable(false);
			}
		}
	}
}
