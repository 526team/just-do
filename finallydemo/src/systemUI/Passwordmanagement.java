/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package systemUI;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import util.DBcls;
import util.Mypanel;
import User.Login;

/**
 *
 * @author Administrator
 */
public class Passwordmanagement extends Mypanel {
    String name =Login.name;
    String usertype;
    Connection con;
    PreparedStatement ps;
    ResultSet rs;
    Dimension frameSize=new Dimension(700,600);
      ImageIcon imageIcon=new ImageIcon(this.getClass().getResource("/resource/bg0.jpg"));
    /**
     * Creates new form Passwordmanagement1
     */
    public Passwordmanagement() {
        initComponents();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        j2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        p1 = new javax.swing.JPasswordField();
        p2 = new javax.swing.JPasswordField();
        p3 = new javax.swing.JPasswordField();
        j1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(700, 600));

        jLabel4.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel4.setText("Change password");

        j2.setText("cancel");
        j2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel1.setText("Old password");

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel2.setText("New password");

        jLabel3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel3.setText("New password");

        j1.setText("ok");
        j1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(j1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(97, 97, 97)
                            .addComponent(j2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(p3, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                        .addComponent(p1))
                    .addComponent(p2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(163, 163, 163))
            .addGroup(layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel4)
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(j2)
                    .addComponent(j1))
                .addContainerGap(156, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void j2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j2ActionPerformed

        System.exit(0);
    }//GEN-LAST:event_j2ActionPerformed

    private void j1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j1ActionPerformed
        String regex = "^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,15}$";




        if (p1.getPassword().length == 0 || p2.getPassword().length == 0 || p3.getPassword().length == 0) {
            JOptionPane.showMessageDialog(this, "Password could not empty");
            return;
        }
        if (!p2.getText().matches(regex)) {
            JOptionPane.showMessageDialog(this, "Password need to be conposed of letters and numbers");
            return;
        }
        if (p2.getPassword().length < 8 && p2.getPassword().length > 0 || p3.getPassword().length < 8 && p3.getPassword().length > 0) {
            JOptionPane.showMessageDialog(this, "Password could  belong to 8~15");
            return;
        }
        if (p1.getPassword().length > 8 && p1.getPassword().length < 15 || p2.getPassword().length > 8 && p2.getPassword().length < 15 || p3.getPassword().length > 8 && p3.getPassword().length < 15) {
            String a[] = {"Select usertype from users where name=?"};
            try {
                try {
                    con = DBcls.getcon();
                } catch (Exception ex) {
                    
                }
                ps = con.prepareStatement(a[0]);
                ps.setString(1, name);
                rs = ps.executeQuery();
                rs.next();
                usertype = rs.getString(1);
            } catch (SQLException ex) {
                 
            }
            if (usertype.equals("administrator")) {
                String sql[] = {"Select * from users where name=? and password=?"};
                try {
                    con = DBcls.getcon();
                    ps = con.prepareStatement(sql[0]);
                    ps.setString(1, name);
                    ps.setString(2, p1.getText());
                    rs = ps.executeQuery();
                } catch (Exception ex) {
                   
                }
                try {
                    if (rs.next()) {
                        if (p2.getText().equals(p3.getText())) {
                            JOptionPane.showMessageDialog(this, "You have change your password");
                            String sq[] = {"update users set password=? where name=?"};
                            ps = con.prepareStatement(sq[0]);
                            ps.setString(2, name);
                            ps.setString(1, p2.getText());
                            ps.execute();

                        }
                        if (!p2.getText().equals(p3.getText())) {
                            JOptionPane.showMessageDialog(this, "Two inconsistencies in password input");
                            return;
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Password is error");
                    }
                } catch (SQLException ex) {
                    
                }
            } else if (usertype.equals("teacher")) {
                String sql[] = {"Select * from users where name=? and password=?"};
                try {
                    con = DBcls.getcon();
                    ps = con.prepareStatement(sql[0]);
                    ps.setString(1, name);
                    ps.setString(2, p1.getText());
                    rs = ps.executeQuery();
                } catch (Exception ex) {
                   
                }
                try {
                    if (rs.next()) {
                        if (p2.getText().equals(p3.getText())) {
                            JOptionPane.showMessageDialog(this, "You have change your password");
                            String sq[] = {"update users set password=? where name=?"};
                            ps = con.prepareStatement(sq[0]);
                            ps.setString(2, name);
                            ps.setString(1, p2.getText());
                            ps.execute();

                        }
                        if (!p2.getText().equals(p3.getText())) {
                            JOptionPane.showMessageDialog(this, "Two inconsistencies in password input");
                            return;
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Password is error");
                    }
                } catch (SQLException ex) {
                    
            } }
                else  {
                String sql[] = {"Select * from users where name=? and password=?"};
                try {
                    con = DBcls.getcon();
                    ps = con.prepareStatement(sql[0]);
                    ps.setString(1, name);
                    ps.setString(2, p1.getText());
                    rs = ps.executeQuery();
                } catch (Exception ex) {
                   ex.printStackTrace();
                }
                try {
                    if (rs.next()) {
                        if (p2.getText().equals(p3.getText())) {
                            JOptionPane.showMessageDialog(this, "You have change your password");
                            String sq[] = {"update users set password=? where name=?"};
                            ps = con.prepareStatement(sq[0]);
                            ps.setString(2, name);
                            ps.setString(1, p2.getText());
                            ps.execute();

                        }
                        if (!p2.getText().equals(p3.getText())) {
                            JOptionPane.showMessageDialog(this, "Two inconsistencies in password input");
                            return;
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Password is error");
                    }
                } catch (SQLException ex) {
                     
                   ex.printStackTrace();
                }


            }

                // }
            }
    }//GEN-LAST:event_j1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton j1;
    private javax.swing.JButton j2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField p1;
    private javax.swing.JPasswordField p2;
    private javax.swing.JPasswordField p3;
    // End of variables declaration//GEN-END:variables

    
}
