
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package systemUI;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;

import util.DBcls;
import util.Mypanel;

/**
 *
 * @author Administrator
 */
public class SelectPanel extends Mypanel implements Runnable {

	public static int selectedID = -1;
	public static int SID;
	Object[][] tab;
	Connection con;
	PreparedStatement ps;
	Statement st;
	ResultSet rs;
	int[] id;

	/**
	 * Creates new form SelectPanel
	 */
	public SelectPanel() {
		initComponents();
		settable();
		new Thread(this).start();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel2 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jButton4 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton9 = new javax.swing.JButton();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();

		jLabel2.setFont(new java.awt.Font("华文彩云", 0, 36)); // NOI18N
		jLabel2.setText("选修课表");

		jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

		jTable1.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Name", "Time", "Room", "Teacher", "Total mark", "Total number", "Joined number" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jTable1.getTableHeader().setResizingAllowed(false);
		jTable1.getTableHeader().setReorderingAllowed(false);
		jScrollPane1.setViewportView(jTable1);

		jButton4.setFont(new java.awt.Font("华文行楷", 0, 24)); // NOI18N
		jButton4.setText("退出");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});

		jButton3.setFont(new java.awt.Font("华文行楷", 0, 24)); // NOI18N
		jButton3.setText("返回");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jButton9.setText("Select");
		jButton9.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton9ActionPerformed(evt);
			}
		});

		jButton1.setText("Refresh");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("Withdrawal");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jButton1)
						.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 117,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(18, 18, 18).addComponent(jButton4,
								javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup().addGap(145, 145, 145).addComponent(jLabel2)))
				.addContainerGap(284, Short.MAX_VALUE))
				.addGroup(layout.createSequentialGroup().addGap(73, 73, 73).addComponent(jButton9)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jButton2).addGap(79, 79, 79))
				.addGroup(
						layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addGap(23, 23, 23)
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 647,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(30, Short.MAX_VALUE))));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(14, 14, 14)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton4)
						.addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jButton1))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 455, Short.MAX_VALUE)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton9)
						.addComponent(jButton2))
				.addGap(28, 28, 28)).addGroup(
						layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addGap(112, 112, 112)
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(93, Short.MAX_VALUE))));
	}// </editor-fold>//GEN-END:initComponents

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:

		this.selectedID = id[jTable1.getSelectedRow()];
		withdrawal();
	}// GEN-LAST:event_jButton2ActionPerformed

	private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton9ActionPerformed
		// TODO add your handling code here:
		this.selectedID = id[jTable1.getSelectedRow()];
		update();
	}// GEN-LAST:event_jButton9ActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		settable();
	}// GEN-LAST:event_jButton1ActionPerformed

	void setobj(ResultSet rs) {

		int i = 0;
		try {
			while (rs.next()) {
				id[i] = rs.getInt(1);
				tab[i][0] = rs.getString(2);
				tab[i][1] = rs.getString(4);
				tab[i][2] = rs.getString(3);
				tab[i][3] = rs.getString(8);
				tab[i][4] = rs.getInt(5);
				tab[i][5] = rs.getInt(6);
				i++;
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		jTable1.setModel(new javax.swing.table.DefaultTableModel(tab,
				new String[] { "Name", "Time", "Room", "Teacher", "Total number", "Joined number" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
	}

	void settable() {
		String sql[] = { "select count(CID) from course where iscompulsory=false",
				"select * from course  where iscompulsory= false" };
		try {
			con = DBcls.getcon();
			st = con.createStatement();
			rs = st.executeQuery(sql[0]);
			int row = 0;
			if (rs.next())
				row = rs.getInt(1);

			rs = st.executeQuery(sql[1]);
			id = new int[row];
			tab = new Object[row][6];
			if (row > 0)
				setobj(rs);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton4ActionPerformed
		int option = JOptionPane.showConfirmDialog(TheMainUI.frame, "确认退出？", "提示", JOptionPane.YES_NO_OPTION);
		if (option == JOptionPane.YES_OPTION) {
			System.exit(0);
		} else {
		}
	}// GEN-LAST:event_jButton4ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		TheMainUI.frame.setContentPane(new SelectLesson());
		TheMainUI.frame.setVisible(true);
	}// GEN-LAST:event_jButton3ActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton9;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	// End of variables declaration//GEN-END:variables

	void update() {
		String sql[] = { "insert into stu_course values(null,?,?,null)",
				"select * from course c natural join stu_course s where s.SID=? and substring(c.classtime,1,3) like ?",
				"update course set rnumber=rnumber+1 where CID=?" };
		try {
			con = DBcls.getcon();
			ps = con.prepareStatement(sql[1]);
			ps.setInt(1, SID);
			ps.setString(2, tab[jTable1.getSelectedRow()][1].toString().substring(0, 3));
			System.out.println(ps);
			rs = ps.executeQuery();
			if (rs.next())
				throw new classException();
			ps = con.prepareStatement(sql[0]);
			ps.setInt(1, SID);
			ps.setInt(2, selectedID);
			System.out.println(ps);
			int rst = ps.executeUpdate();
			if (rst > 0) {
				ps = con.prepareStatement(sql[2]);
				ps.setInt(1, selectedID);
				System.out.println(ps);
				ps.execute();
				JOptionPane.showMessageDialog(this, "Succeeded");
			}
		} catch (classException e) {
			JOptionPane.showMessageDialog(this, "Conflict with an existing course", "CONFLICT",
					JOptionPane.ERROR_MESSAGE);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	void withdrawal() {
		String sql[] = { "delete from stu_course where CID=" + selectedID + " and SID=" + SID,
				"update course set rnumber=rnumber-1 where CID=" + selectedID };
		try {
			ps = con.prepareStatement(sql[0]);
			int i = ps.executeUpdate();
			if (i == 1) {
				JOptionPane.showMessageDialog(this, "Succeeded");
				ps = con.prepareStatement(sql[1]);
				ps.execute();
			} else
				JOptionPane.showMessageDialog(this, "Invalid operaton");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while (true) {
			try {
				Thread.currentThread().sleep(100);
				if (jTable1.getSelectedRow() > -1) {
					jButton9.setEnabled(true);
					jButton2.setEnabled(true);
				} else {
					jButton9.setEnabled(false);
					jButton2.setEnabled(false);
				}
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	class classException extends Exception {
	}
}
